# 2. В ruby есть safe navigation operator (&.),
# который позволяет избежать ошибки NoMethodError для nil-объекта:
# some_object&.even? (some_object = 1 => true; some_object = nil => nil).
# Данный оператор удобен, когда есть вероятность, что объект будет nil,
# но дополнительно проверять это будет затратно и неудобно.
# Тем не менее, этот оператор не исключает ошибок в ситуации,
# когда метод не существует для объектов другого класса: false&.even? (NoMethodError).
# Целью данной задачи является реализация такого метода,
# который будет возвращать nil, если для объекта нельзя вызвать указанный метод.
# Метод должен находиться в модуле и получать параметром блок.

module Triable
  def try
    begin
      block_given? ? yield(self) : self
    rescue NoMethodError
      nil
    end
  end
end
